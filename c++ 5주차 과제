#include <iostream>
#include <vector>
#include <string>
using namespace std;

class Information {
private:
    string title;
    string author;
public:
    Information(string t, string a) : title(t), author(a) {}
    string getTitle() { return title; }
    string getAuthor() { return author; }

    void setTitle(string t) { title = t; }
    void setAuthor(string a) { author = a; }
};

// 포인터를 사용한 검색 함수
bool isSameBook(Information* book, string title, string author) {
    return book->getTitle() == title && book->getAuthor() == author;
}

// 도서 검색 함수: 포인터 반환 (찾으면 주소, 없으면 nullptr)
Information* findBook(vector<Information>& books, string title, string author) {
    for (auto& book : books) {
        if (isSameBook(&book, title, author)) {
            return &book;
        }
    }
    return nullptr;
}

int main() {
    vector<Information> books;
    int choice;

    while (true) {
        cout << "\n 도서 정보 관리 프로그램 \n";
        cout << "1. 도서 추가\n";
        cout << "2. 도서 검색\n";
        cout << "3. 도서 정보 수정\n";
        cout << "4. 프로그램 종료\n";
        cout << "번호를 입력하세요: ";
        cin >> choice;
        cin.ignore(); // 개행 문자 제거

        if (choice == 1) {
            cout << "\n****** 도서 추가를 진행합니다 *******\n";
            string title, author;
            cout << "도서 제목을 입력하세요: ";
            getline(cin, title);
            cout << "저자 이름을 입력하세요: ";
            getline(cin, author);

            if (findBook(books, title, author)) {
                cout << "이미 등록된 도서입니다.\n";
            } else {
                books.push_back(Information(title, author));
                cout << "도서가 추가되었습니다.\n";
            }
        }
        else if (choice == 2) {
            string title, author;
            cout << "검색할 도서 제목을 입력하세요: ";
            getline(cin, title);
            cout << "저자 이름을 입력하세요: ";
            getline(cin, author);
            Information* found = findBook(books, title, author);
            if (found) {
                cout << "\n도서를 찾았습니다:\n";
                cout << "제목: " << found->getTitle() << endl;
                cout << "저자: " << found->getAuthor() << endl;
            }
            else {
                cout << "일치하는 도서를 찾을 수 없습니다.\n";  // ✅ 변경된 메시지
            }
        }
        else if (choice == 3) {
            cout << "\n******* 도서 정보를 수정합니다 *******\n";
            string title, author;
            cout << "수정할 도서 제목을 입력하세요: ";
            getline(cin, title);
            cout << "저자 이름을 입력하세요: ";
            getline(cin, author);
            Information* found = findBook(books, title, author);
            if (found) {
                string newTitle, newAuthor;
                cout << "새로운 제목을 입력하세요: ";
                getline(cin, newTitle);
                cout << "새로운 저자를 입력하세요: ";
                getline(cin, newAuthor);
                found->setTitle(newTitle);
                found->setAuthor(newAuthor);
                cout << "도서 정보가 수정되었습니다.\n";
            }
            else {
                cout << "일치하는 도서를 찾을 수 없습니다.\n";  // ✅ 변경된 메시지
            }
        }
        else if (choice == 4) {
            cout << "프로그램을 종료합니다.\n";
            break;
        }
        else {
            cout << "정확한 번호를 입력하세요.\n";
        }
    }

    return 0;
}
