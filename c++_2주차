#include <iostream>
#include <vector>
#include <iomanip>

using namespace std;

const int TRAINS = 3;
const int ROWS = 5;
const int COLS = 4;

vector<vector<int>> trains[TRAINS];
int adult_count = 0, youth_count = 0;
const int ADULT_PRICE = 25000;
const int YOUTH_PRICE = 18000;

void initializeSeats() {
    for (int t = 0; t < TRAINS; t++) {
        trains[t] = vector<vector<int>>(ROWS, vector<int>(COLS, 0));
    }
}

void displaySeats() {
    for (int t = 0; t < TRAINS; t++) {
        cout << "\n[기차 " << (t + 1) << " 좌석 현황]\n";
        cout << "      1  2     3  4 (" << t + 1 << "호차)" << endl;
        cout << "      -------------" << endl;
        for (int i = 0; i < ROWS; i++) {
            cout << "      ";
            for (int j = 0; j < COLS; j++) {
                cout << trains[t][i][j] << "  ";
                if (j == 1) cout << "   "; // 통로 공간 추가
            }
            cout << endl;
        }
    }
}

bool isSeatAvailable(int train, int row, int col) {
    return trains[train][row][col] == 0;
}

bool reserveSeat(int train, int row, int col) {
    if (train < 1 || train > TRAINS) {
        cout << "예약 가능한 호차가 아닙니다.\n";
        return false;
    }
    if (row < 1 || row > ROWS || col < 1 || col > COLS) {
        cout << "예약 가능한 좌석이 아닙니다.\n";
        return false;
    }
    train -= 1; row -= 1; col -= 1;
    if (trains[train][row][col] != 0) {
        cout << "이미 예약되었습니다. 다른 자리를 선택하세요.\n";
        return false;
    }
    trains[train][row][col] = 1;
    cout << "좌석 예약이 완료되었습니다!\n";
    return true;
}

bool changeReservation(int train, int oldRow, int oldCol, int newRow, int newCol) {
    if (reserveSeat(train, newRow, newCol)) {
        trains[train - 1][oldRow - 1][oldCol - 1] = 0;
        cout << "예약이 변경되었습니다.\n";
        return true;
    }
    return false;
}

void calculateTotal() {
    int total = (adult_count * ADULT_PRICE) + (youth_count * YOUTH_PRICE);
    cout << "\n예매 요약:\n";
    cout << "성인: " << adult_count << "명 x " << ADULT_PRICE << "원 = " << (adult_count * ADULT_PRICE) << "원\n";
    cout << "청소년: " << youth_count << "명 x " << YOUTH_PRICE << "원 = " << (youth_count * YOUTH_PRICE) << "원\n";
    cout << "총 금액: " << total << "원\n";
}

int main() {
    initializeSeats();
    int choice;
    do {
        cout << "\n기차 좌석 예매 시스템\n";
        cout << "1. 좌석 예매\n2. 예약 변경\n3. 좌석 보기\n4. 종료\n";
        cout << "메뉴를 선택하세요: ";
        cin >> choice;

        if (choice == 1) {
            int train;
            displaySeats();
            cout << "\n몇 호차를 예약하시겠습니까? (1~3): ";
            cin >> train;
            if (train < 1 || train > TRAINS) {
                cout << "예약 가능한 호차가 아닙니다.\n";
                continue;
            }
            int num_adults, num_youths;
            cout << "예약할 인원을 입력하세요:\n";
            cout << "성인(" << ADULT_PRICE << "원): "; cin >> num_adults;
            cout << "청소년(" << YOUTH_PRICE << "원): "; cin >> num_youths;

            int totalSeats = num_adults + num_youths;
            int reserved = 0;
            while (reserved < totalSeats) {
                int row, col;
                cout << "몇 열, 몇 번째 좌석을 예약하시겠습니까? (행 열): ";
                cin >> row >> col;
                if (reserveSeat(train, row, col)) {
                    if (reserved < num_adults) adult_count++;
                    else youth_count++;
                    reserved++;
                }
                else {
                    cout << "예약 실패. 다시 시도해주세요.\n";
                }
            }

            calculateTotal();
        }
        else if (choice == 2) {
            int train, oldRow, oldCol, newRow, newCol;
            displaySeats();
            cout << "\n기차 번호 (1~3): "; cin >> train;
            cout << "기존 좌석 (행 열): "; cin >> oldRow >> oldCol;
            cout << "변경 좌석 (행 열): "; cin >> newRow >> newCol;
            changeReservation(train, oldRow, oldCol, newRow, newCol);
        }
        else if (choice == 3) {
            displaySeats();
        }
    } while (choice != 4);

    calculateTotal();
    cout << "예매 시스템을 종료합니다.\n";
    return 0;
}
